--Procedimiento para adicionar elementos al stock de un implemento de seguridad

CREATE OR REPLACE PROCEDURE ADICIONAR_IMPLEMENTO (ID_I IN NUMBER, CANT_AD IN NUMBER) IS
CANT_ACTUAL NUMBER;
CANT_NUEVA NUMBER;
BEGIN
  SELECT CANTIDAD INTO CANT_ACTUAL FROM IMPL_SEGURIDAD WHERE ID_IMPLEMENTO = ID_I FOR UPDATE;
  CANT_NUEVA := CANT_ACTUAL + CANT_AD;
  UPDATE IMPL_SEGURIDAD SET CANTIDAD = CANT_NUEVA WHERE ID_IMPLEMENTO = ID_I;
  COMMIT;
EXCEPTION WHEN OTHERS THEN  
  raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
  ROLLBACK;
END ADICIONAR_IMPLEMENTO;

-- Procedimiento para asignar implementos a un empleado temporal

CREATE OR REPLACE PROCEDURE ASIGNAR_IMPLEMENTO (ID_I IN NUMBER, ID_EM_TEM IN NUMBER, ID_COOR IN NUMBER, CANT_ASIG IN NUMBER) IS
STOCK_ACTUAL NUMBER;
STOCK_NUEVO NUMBER;
BEGIN
  SELECT CANTIDAD INTO STOCK_ACTUAL FROM JDROZOB.IMPL_SEGURIDAD WHERE ID_IMPLEMENTO = ID_I FOR UPDATE;
  STOCK_NUEVO := STOCK_ACTUAL - CANT_ASIG;
  UPDATE JDROZOB.IMPL_SEGURIDAD SET CANTIDAD = STOCK_NUEVO WHERE ID_IMPLEMENTO = ID_I;
  INSERT INTO JDROZOB.ASIG_IMPL (ID_IMPLEMENTO, CEDULAE, COO_CEDULAE, CANTIDAD_ASIGNADA, ESTADO_ASIGNACION, FECHA_ASIGNACION_I) VALUES
  (ID_I, ID_EM_TEM, ID_COOR, CANT_ASIG, 1, SYSDATE);
  COMMIT;
EXCEPTION WHEN OTHERS THEN  
  raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
  ROLLBACK;
END ASIGNAR_IMPLEMENTO;

-- Procedimiento para despojar a un empleado temporal de un implemento

CREATE OR REPLACE
PROCEDURE DESPOJAR_IMPLEMENTO (ID_I IN NUMBER, ID_EM_TEM IN NUMBER, ID_COOR IN NUMBER, CANT_DESP IN NUMBER) IS
STOCK_ACTUAL NUMBER;
STOCK_NUEVO NUMBER;
BEGIN
  SELECT CANTIDAD INTO STOCK_ACTUAL FROM JDROZOB.IMPL_SEGURIDAD WHERE ID_IMPLEMENTO = ID_I FOR UPDATE;
  STOCK_NUEVO := STOCK_ACTUAL + CANT_DESP;
  UPDATE JDROZOB.IMPL_SEGURIDAD SET CANTIDAD = STOCK_NUEVO WHERE ID_IMPLEMENTO = ID_I;
  UPDATE JDROZOB.ASIG_IMPL SET ESTADO_ASIGNACION = 0 WHERE ID_IMPLEMENTO = ID_I AND CEDULAE = ID_EM_TEM;
  COMMIT;
EXCEPTION WHEN OTHERS THEN  
  raise_application_error(-20001,'An error was encountered - '||SQLCODE||' -ERROR- '||SQLERRM);
  ROLLBACK;
END DESPOJAR_IMPLEMENTO;

       
create or replace
PROCEDURE P1_BITACORA (TABLA IN VARCHAR2, RESPUESTA IN OUT INT)
AS

BEGIN
DECLARE V_COUNTER NUMBER; 
BEGIN
SELECT * INTO V_COUNTER FROM BITACORA.TABLA_MODIFICADA = TABLA;

IF V_COUNTER>0 THEN

	SELECT 
		BITACORA.CEDULA,
		BITACORA.FECHA_OPERACION,
		BITACORA.USUARIO_OPERACION,
		BITACORA.MAQUINA_OPERACION,
		BITACORA.TABLA_MODIFICADA,
		BITACORA.TIPO_OPERACION
	FROM
		BITACORA
	WHERE
		BITACORA.TIPO_OPERACION = TABLA;

ELSE
	RESPUESTA := 0;
END IF;
END;
END;
/
create or replace
PROCEDURE P2_BITACORA (FECHA IN DATE, RESPUESTA IN OUT INT)
AS
BEGIN
DECLARE V_COUNTER NUMBER; 
BEGIN
SELECT * INTO V_COUNTER FROM BITACORA.FECHA_OPERACION = FECHA;

IF V_COUNTER>0 THEN

	SELECT 
		BITACORA.CEDULA,
		BITACORA.FECHA_OPERACION,
		BITACORA.USUARIO_OPERACION,
		BITACORA.MAQUINA_OPERACION,
		BITACORA.TABLA_MODIFICADA,
		BITACORA.TIPO_OPERACION
	FROM
		BITACORA
	WHERE
		BITACORA_SEG.FECHA_OPERACION = FECHA;

ELSE
	RESPUESTA := 0;
END IF;
END;
END;
/
create or replace
PROCEDURE P3_BITACORA (OPERACION IN VARCHAR2, RESPUESTA IN OUT INT)
AS
BEGIN
DECLARE V_COUNTER NUMBER; 
BEGIN
SELECT * INTO V_COUNTER FROM BITACORA_SEG.TIPO_OPERACION = OPERACION;

IF V_COUNTER>0 THEN

	SELECT 
		BITACORA.CEDULA,
		BITACORA.FECHA_OPERACION,
		BITACORA.USUARIO_OPERACION,
		BITACORA.MAQUINA_OPERACION,
		BITACORA.TABLA_MODIFICADA,
		BITACORA.TIPO_OPERACION
	FROM
		BITACORA
	WHERE
		BITACORA.TIPO_OPERACION = OPERACION;

ELSE
	RESPUESTA := 0;
END IF;
END;
END;
/
		
		